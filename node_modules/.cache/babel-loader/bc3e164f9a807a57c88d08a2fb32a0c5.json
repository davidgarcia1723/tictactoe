{"ast":null,"code":"var _jsxFileName = \"/Users/R2H/Desktop/Projects-folder/tic-tac-toe-reactHooks/src/Components/Board/Board.js\";\nimport React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png';\nimport fellowship from '../../img/fellowships.png';\nimport ResetButton from '../ResetButton/ResetButton';\n\nconst Board = () => {\n  const intialBoard = Array(9).fill(null);\n  const [squares, setSquares] = useState(intialBoard);\n  const [playerXIsNext, setPlayerXIsNext] = useState(true);\n\n  const renderSquare = i => {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: squares[i],\n      onClick: () => handleCLick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    });\n  };\n\n  const handleCLick = i => {\n    const newSquares = [...squares];\n    const winnerDeclared = Boolean(calculateWinner(squares));\n    const squareAlreadyFilled = Boolean(newSquares[i]);\n    if (winnerDeclared || squareAlreadyFilled) return;\n    newSquares[i] = playerXIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setPlayerXIsNext(!playerXIsNext);\n  };\n\n  const isBoardFull = squares => {\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] == null) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const calculateWinner = squares => {\n    /* Squares indexes as they appear in UI:\n    0 1 2\n    3 4 5\n    6 7 8\n    */\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // shows all of the winning combinations (\"lines\")\n    // Iterate over lines \n\n    for (let line of lines) {\n      const [a, b, c] = line;\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  };\n\n  const winner = calculateWinner(squares);\n\n  const getStatus = () => {\n    if (winner) {\n      return \"Congrats player \" + winner + \" for winning!\";\n    } else if (isBoardFull(squares)) {\n      return \"The game ended in a draw!\";\n    } else {\n      return \"Next player is player\" + (playerXIsNext ? \"X\" : \"O\");\n    }\n  };\n\n  const resetGame = () => {\n    setSquares(intialBoard);\n    setPlayerXIsNext(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    className: `main--container \n            ${winner && getStatus() === \"Congrats player\" + winner + \" for winning!\" || !winner && getStatus() === \"The game ended in a draw!\" ? getStatus() === \"The game ended in a draw\" ? \"draw\" : \"winner\" : playerXIsNext ? \"X\" : \"O\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: r2h,\n    alt: \"r2h logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: fellowship,\n    alt: \"fellowship\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, getStatus()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board--row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8))), /*#__PURE__*/React.createElement(ResetButton, {\n    onClick: resetGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/R2H/Desktop/Projects-folder/tic-tac-toe-reactHooks/src/Components/Board/Board.js"],"names":["React","useState","Square","r2h","fellowship","ResetButton","Board","intialBoard","Array","fill","squares","setSquares","playerXIsNext","setPlayerXIsNext","renderSquare","i","handleCLick","newSquares","winnerDeclared","Boolean","calculateWinner","squareAlreadyFilled","isBoardFull","length","lines","line","a","b","c","winner","getStatus","resetGame"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Square from '../Square/Square';\nimport r2h from '../../img/r2h.png'\nimport fellowship from '../../img/fellowships.png'\nimport ResetButton from '../ResetButton/ResetButton'\n\n\n\n    const Board = () => {\n        const intialBoard = Array(9).fill(null)\n        const [squares, setSquares] = useState(intialBoard)\n        const [playerXIsNext, setPlayerXIsNext] = useState(true)\n\n    const renderSquare = (i) => {\n        return <Square  value={squares[i]} onClick={() => handleCLick(i)} />\n    }\n\n    const handleCLick = (i) => {\n        const newSquares = [...squares]\n        const winnerDeclared = Boolean(calculateWinner(squares))\n        const squareAlreadyFilled = Boolean(newSquares[i])\n        if (winnerDeclared || squareAlreadyFilled) return\nnewSquares[i] = playerXIsNext ? \"X\" : \"O\"\n\n        setSquares(newSquares)\n        setPlayerXIsNext(!playerXIsNext)\n    }\n\n    const isBoardFull = (squares) => {\n        for (let i = 0; i < squares.length; i++) {\n            if(squares[i] == null){\n                return false\n            }\n        }\n        return true\n    }\n\n\n    const calculateWinner = (squares) => {\n        /* Squares indexes as they appear in UI:\n        0 1 2\n        3 4 5\n        6 7 8\n        */\n       const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]; // shows all of the winning combinations (\"lines\")\n    // Iterate over lines \n    for (let line of lines) {\n        const [a, b, c] = line;\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a]\n        }\n        \n    }\n    return null\n    }\n\n    const winner = calculateWinner(squares);\n\n    const getStatus = () => {\n        if (winner) {\n            return \"Congrats player \" + winner + \" for winning!\";\n        } else if (isBoardFull(squares)) {\n            return \"The game ended in a draw!\"\n        } \n        else {\n            return \"Next player is player\" + (playerXIsNext ? \"X\" : \"O\")\n        }\n    }\n\n\n    const resetGame = () => {\n        setSquares(intialBoard)\n        setPlayerXIsNext(true)\n    }\n\n    return (\n        <>\n            <main className={`main--container \n            ${(winner && getStatus() === \n                \"Congrats player\" + winner + \" for winning!\" || \n                !winner && getStatus() === \"The game ended in a draw!\") ?  \n                (getStatus() === \"The game ended in a draw\" ? \"draw\" \n                 : \"winner\") : (playerXIsNext ? \"X\" : \"O\") }`}>\n\n\n                <div className=\"logo\">\n                    <img src={r2h} alt=\"r2h logo\" />\n                    <img src={fellowship} alt=\"fellowship\" />\n                </div>\n                <div className=\"status\">\n                    {getStatus()}\n                </div>\n                <div className=\"board--container\">\n                    <div className=\"board\">\n                        <div className=\"board--row\">\n                            {renderSquare(0)}\n                            {renderSquare(1)}\n                            {renderSquare(2)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(3)}\n                            {renderSquare(4)}\n                            {renderSquare(5)}\n                        </div>\n                        <div className=\"board--row\">\n                            {renderSquare(6)}\n                            {renderSquare(7)}\n                            {renderSquare(8)}\n                        </div>\n                    </div>\n                    <ResetButton  onClick={resetGame}/ >\n                </div>\n            </main>\n        </>\n    )\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}